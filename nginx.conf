# Nginx配置文件 - 用于部署WebRTC视频通话应用

# 全局设置
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    # 允许多个连接同时发送到客户端
    multi_accept on;
}

http {
    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 确保JavaScript模块文件使用正确的MIME类型
    types {
        application/javascript js mjs;
        text/javascript js;
    }

    # 日志设置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip压缩
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 服务器块配置
    server {
        listen 80;
        server_name qtai.net.cn 8.140.237.167;  # 服务器域名和IP地址

        # 重定向HTTP到HTTPS（可选但推荐）
        # return 301 https://$server_name$request_uri;

        # 前端静态文件服务
        root /Users/offer/offer_work/ScreenSharing/dist;  # 使用本地构建目录
        index index.html;

        # 处理前端路由（单页应用）
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 反向代理WebSocket信令服务 (Socket.IO)
        location /socket.io/ {
            proxy_pass http://localhost:3000;  # 信令服务器地址
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;  # 长时间保持WebSocket连接
        }

        # 反向代理直接WebSocket连接（ws://协议）
        location /ws/ {
            proxy_pass http://localhost:3000/;  # 添加斜杠确保路径正确传递
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_buffering off;  # 禁用缓冲以减少延迟
            proxy_cache off;  # 禁用缓存
        }

        # 静态文件缓存配置
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
        }
    }

    # HTTPS配置（可选但推荐）
    # server {
    #     listen 443 ssl;
    #     server_name qtai.net.cn 8.140.237.167;

    #     # SSL证书配置
    #     ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #     ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    #     # 前端静态文件服务
    #     root /var/www/webrtc-app/dist;
    #     index index.html;

    #     # 处理前端路由
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }

    #     # 反向代理WebSocket信令服务 (Socket.IO)
    #     location /socket.io/ {
    #         proxy_pass http://localhost:3000;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_read_timeout 86400;
    #     }

    #     # 反向代理直接WebSocket连接
    #     location /ws/ {
    #         proxy_pass http://localhost:3000/;  # 添加斜杠确保路径正确传递
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_read_timeout 86400;
    #         proxy_buffering off;
    #         proxy_cache off;
    #     }

    #     location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
    #         expires 7d;
    #         add_header Cache-Control "public, max-age=604800";
    #     }
    # }
}